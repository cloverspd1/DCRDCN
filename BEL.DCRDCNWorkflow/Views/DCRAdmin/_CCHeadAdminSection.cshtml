@using BEL.DCRDCNWorkflow.Models;
@using BEL.CommonDataContract
@model DCRAdminDetailSection

@{
    List<MasterDataItem> ConsumerList = new List<MasterDataItem>();
    ConsumerList.Add(new MasterDataItem("Feasible", "Feasible"));
    ConsumerList.Add(new MasterDataItem("Not Feasible", "Not Feasible"));
    }
<div class="form-horizontal">
    
    <div class="card" id="cchead">
        <div class="card-head">
            @Html.ResourceValue("Section_Title_CCHead", ResourceNames.DCR)
            <div class="btn collapse-btn" data-toggle="collapse" data-target="#ccHeadSec"><i class="fa fa-chevron-down"></i></div>
        </div>
        <div class="card-body" id="ccHeadSec">
            <div class="form-horizontal">


                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="col-md-4 control-label">
                                <span class="text-danger text-default-light">*</span>
                                @Html.LabelFor(m => m.Feasibility, ResourceNames.DCR)

                            </label>
                            <div class="col-md-8 ">
                                @Html.DropDownListFor(m => m.Feasibility, new SelectList((ConsumerList).OrderBy(x => x.Title).ToList(), "Value", "Title"), "Select", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Feasibility, ResourceNames.DCR)
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="col-md-4 control-label">

                                @Html.LabelFor(m => Model.CurrentApprover.ApprovalDate, ResourceNames.Common)
                            </label>
                            <div class="col-md-8 ">
                                @(Model.CurrentApprover != null && Model.CurrentApprover.ApprovalDate.HasValue ? Model.CurrentApprover.ApprovalDate.Value.ToShortDateString() : "-")
                                @Html.Hidden("Approver", Model.CurrentApprover != null && Model.CurrentApprover.ApprovalDate.HasValue ? Model.CurrentApprover.ApprovalDate.Value.ToShortDateString() : string.Empty)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="exampleInputEmail1" class="col-md-4 control-label">
                                @Html.LabelFor(m => m.CCIfNotFeasibleGiveReason, ResourceNames.DCR)
                            </label>
                            <div class="col-md-8 ">
                                @Html.TextBoxFor(m => m.CCIfNotFeasibleGiveReason, new { maxlength = 255, @class = "form-control", data_toggle = "tooltip", title = "Max 255 characters" })
                                @Html.ValidationMessageFor(m => m.CCIfNotFeasibleGiveReason, ResourceNames.DCR)
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
   
</div>
