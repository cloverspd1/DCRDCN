@using BEL.DCRDCNWorkflow.Models.DCR;
@using BEL.DCRDCNWorkflow.Models.Common;
@using BEL.DCRDCNWorkflow.Models.Master;
@using BEL.CommonDataContract;
@model DCRDetailSection
<script type="text/javascript">
    @{
        DivisionMaster divisionlist = Model.MasterData.FirstOrDefault(x => x.NameOfMaster.Equals(DCRDCNListNames.DIVISIONMASTER)) as DivisionMaster;
        ProductCategoryMaster prodlist = Model.MasterData.FirstOrDefault(x => x.NameOfMaster.Equals(DCRDCNListNames.PRODUCTCATEGORYMASTER)) as ProductCategoryMaster;
        ApproverMaster approverlist = Model.MasterData.FirstOrDefault(x => x.NameOfMaster.Equals(DCRDCNListNames.APPROVERMASTER)) as ApproverMaster;

    //DepartmentMaster divisionList = Model.MasterData.FirstOrDefault(m => m.NameOfMaster.Equals(DCRDCNListNames.DEPARTMENTMASTER)) as DepartmentMaster;
    //divisionList.Items.ForEach(x => x.Title = (x as DepartmentMasterListItem).Value + " - " + x.Title);

    //List<MasterDataItem> businessUnit = new List<MasterDataItem>();
    //businessUnit.Add(new MasterDataItem("CP", "CP"));
    //businessUnit.Add(new MasterDataItem("LUM", "LUM"));

        //var desingenggList = approverlist.Items.Where(x => (x as ApproverMasterListItem).Role == DCRRoles.DESIGNENGINEER).ToList();
        //List<ApproverMasterListItem> desingenggList = approverlist.Items.Where(x => (x as ApproverMasterListItem).Role == DCRRoles.DESIGNENGINEERINCHARGE && (x as ApproverMasterListItem).BusinessUnit == Model.BusinessUnit).ToList().ConvertAll(p => (ApproverMasterListItem)p);
        //desingenggList = Helper.splitUser(desingenggList);

        List<ApproverMasterListItem> desingenggList = approverlist.Items.Where(x => (x as ApproverMasterListItem).Role == DCRRoles.DESIGNENGINEER && (x as ApproverMasterListItem).BusinessUnit == Model.BusinessUnit).ToList().ConvertAll(p => (ApproverMasterListItem)p);
        desingenggList = Helper.splitUser(desingenggList);


        List<MasterDataItem> statusList = new List<MasterDataItem>();
        statusList.Add(new MasterDataItem("Consider", "Consider"));
        statusList.Add(new MasterDataItem("Not Consider", "Not Consider"));
        statusList.Add(new MasterDataItem("Rework", "Rework"));

    }
    var DivisionList = JSON.parse(@(new HtmlString(Json.Encode(Newtonsoft.Json.JsonConvert.SerializeObject(divisionlist.Items.OrderBy(p => p.Title).ToList())))));
    var ProductCategoryList = JSON.parse(@(new HtmlString(Json.Encode(Newtonsoft.Json.JsonConvert.SerializeObject(prodlist.Items.OrderBy(p => p.Title).ToList())))));
    var Approverlist = JSON.parse(@(new HtmlString(Json.Encode(Newtonsoft.Json.JsonConvert.SerializeObject(approverlist.Items.OrderBy(p => p.Title).ToList())))));


</script>
<div id="divdcrDetailSection">

    @using (Ajax.BeginForm("SavedcrDetailSection", "DCR", new AjaxOptions
    {
        HttpMethod = "POST",
        LoadingElementId = "loading",
        OnFailure = "OnFailure",
        OnSuccess = "OnSuccess",
        OnBegin = "BeginClient"
    }, new { enctype = "multipart/form-data" }))
    {

        @Html.HiddenFor(m => m.ListDetails[0].ItemId)
        @Html.HiddenFor(m => m.ListDetails[0].ListName)
        @Html.HiddenFor(m => m.SectionName)
        @Html.HiddenFor(m => m.ActionStatus)
        @Html.HiddenFor(m => m.IsDCRRetrieved)
        @*@Html.Partial("_ApproversList", Model.ApproversList)*@
        @Html.HiddenFor(m => m.Status)
        @Html.HiddenFor(m => m.WorkflowStatus)
        @Html.Partial("_CurrentApprover", Model.CurrentApprover ?? new ApplicationStatus())
        @Html.HiddenFor(m => m.FinalDesignEngineer)
        @Html.HiddenFor(m => m.FinalDesignEngineerName)



        //   @Html.Partial("_CurrentApprover", Model.CurrentApprover != null ? Model.CurrentApprover : new ApplicationStatus())
        @Html.AntiForgeryToken()



        if (!string.IsNullOrEmpty(Model.OldDCRNo))
        {

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="col-md-4 control-label">
                            @Html.LabelFor(m => m.OldDCRNo, ResourceNames.DCR)
                        </label>
                        <div class="col-md-8 ">
                            <div class="form-control noborder">
                                @Html.DisplayFor(m => m.OldDCRNo, ResourceNames.DCR)
                                @Html.HiddenFor(m => m.OldDCRNo)
                                @Html.HiddenFor(m => m.OldDCRId)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="col-md-4 control-label">
                            @Html.LabelFor(m => m.OldDCRCreatedDate, ResourceNames.DCR)
                        </label>
                        <div class="col-md-8 ">
                            <div class="form-control noborder">

                                @(Model.OldDCRCreatedDate.HasValue ? Model.OldDCRCreatedDate.Value.ToShortDateString() : string.Empty)
                                @Html.HiddenFor(m => m.OldDCRCreatedDate)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="col-md-4 control-label">
                            @Html.LabelFor(m => m.OldDCRRejectedDate, ResourceNames.DCR)
                        </label>
                        <div class="col-md-8 ">
                            <div class="form-control noborder">
                                @(Model.OldDCRRejectedDate.HasValue ? Model.OldDCRRejectedDate.Value.ToShortDateString() : string.Empty)
                                @Html.HiddenFor(m => m.OldDCRRejectedDate)

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">

                </div>
            </div>
        }
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">
                        @Html.LabelFor(m => m.ProposedBy, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8 ">
                        <div class="form-control noborder">
                            @(string.IsNullOrEmpty(Model.ProposedByName) ? ViewBag.UserName : Model.ProposedByName)
                            @Html.Hidden("ProposedBy", string.IsNullOrEmpty(Model.ProposedBy) ? (string)ViewBag.UserID : Model.ProposedBy)
                            @Html.Hidden("ProposedByName", string.IsNullOrEmpty(Model.ProposedByName) ? (string)ViewBag.UserName : Model.ProposedByName)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">
                        @Html.LabelFor(m => m.RequestDate, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8 ">
                        <div class="form-control noborder">
                            @*@(Model.RequestDate.HasValue ? Model.RequestDate.Value.ToShortDateString() : DateTime.Now.ToShortDateString())
                                @Html.Hidden("RequestDate", Model.RequestDate.HasValue ? Model.RequestDate.Value.ToShortDateString() : DateTime.Now.ToShortDateString())*@
                            @(Model.RequestDate.HasValue ? Model.RequestDate.Value.ToShortDateString() : "")
                            @Html.Hidden("RequestDate", Model.RequestDate.HasValue ? Model.RequestDate.Value.ToShortDateString() : "")
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        <span class="text-danger text-default-light">*</span>
                        @Html.LabelFor(m => m.RequestDepartment, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8 ">
                        <div class="form-control noborder">
                            @(string.IsNullOrEmpty(Model.RequestDepartment) ? ViewBag.RequestDepartment : Model.RequestDepartment)
                            @Html.Hidden("RequestDepartment", string.IsNullOrEmpty(Model.RequestDepartment) ? (string)ViewBag.RequestDepartment : Model.RequestDepartment)

                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-group">
                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        @Html.LabelFor(m => m.Status, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8 ">
                        <div class="form-control noborder">
                            <span class="text-danger" id="Status">
                                <b>
                                    @(string.IsNullOrEmpty(Model.WorkflowStatus) ? Html.ResourceValue("Text_New", ResourceNames.Common) : Model.WorkflowStatus)
                                </b>
                            </span>
                            @Html.HiddenFor(m => m.Status)
                            @Html.HiddenFor(m => m.WorkflowStatus)

                        </div>
                    </div>
                </div>
            </div>
        </div>
        if (!string.IsNullOrEmpty(Model.DCRNo) && Model.DCRNo != "View")
        {
            <div class="row">
                <div class="col-sm-6 refNo">
                    <div class="form-group">
                        <label for="exampleInputEmail1" class="col-md-4 control-label">
                            @Html.LabelFor(m => m.DCRNo, ResourceNames.DCR)
                        </label>
                        <div class="col-md-8 ">
                            <div class="form-control noborder">
                                <span class="text-danger" id="ReferenceNo">
                                    <b>
                                        @Html.DisplayFor(m => m.DCRNo, ResourceNames.DCR)
                                        @Html.HiddenFor(m => m.DCRNo)
                                        @Html.HiddenFor(m => m.Title)
                                    </b>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        <span class="text-danger text-default-light">*</span>
                        @Html.LabelFor(m => m.BusinessUnit, ResourceNames.DCR)

                    </label>
                    <div class="col-md-8 ">
                        <div class="form-control noborder">
                            @if (Model.ListDetails[0].ItemId > 0 && Model.WorkflowStatus.ToUpper().Contains("SENT BACK"))
                            {
                                @Html.DisplayFor(m => m.BusinessUnit)
                                //Below dropdiwn is just for Javascript bind events, it will be hidden
                                @Html.DropDownListFor(m => m.BusinessUnit, new SelectList((Model.MasterData.FirstOrDefault(x => x.NameOfMaster.Equals(DCRDCNListNames.BUSINESSUNITMASTER)) as BusinessUnitMaster).Items, "Value", "Title"), "Select", new { @class = "form-control hide", @data_selected = Model.BusinessUnit })
                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.BusinessUnit, new SelectList((Model.MasterData.FirstOrDefault(x => x.NameOfMaster.Equals(DCRDCNListNames.BUSINESSUNITMASTER)) as BusinessUnitMaster).Items, "Value", "Title"), "Select", new { @class = "form-control", @data_selected = Model.BusinessUnit })
                                @Html.ValidationMessageFor(m => m.BusinessUnit, ResourceNames.DCR)
                            }


                        </div>

                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        <span class="text-danger text-default-light">*</span>
                        @Html.LabelFor(m => m.Division, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8">
                        <div class="form-control noborder">
                            @Html.ListBox("DCRDivision", new MultiSelectList(new List<SelectListItem>()), new { @id = "DCRDivision", @Name = "DCRDivision", @class = "form-control", @data_selected = Model.Division })
                            @Html.ValidationMessageFor(m => m.Division, ResourceNames.DCR)
                            @Html.ValidationMessage("DCRDivision", Html.ResourceValue("Error_Division", ResourceNames.DCR))
                            @Html.HiddenFor(m => m.Division)
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        <span class="text-danger text-default-light">*</span>
                        @Html.LabelFor(m => m.ProductCategory, ResourceNames.DCR)

                    </label>
                    <div class="col-md-8">
                        <div class="form-control noborder multiselect-two">

                            @Html.ListBox("DCRProductCategory", new MultiSelectList(new List<SelectListItem>().OrderBy(x => x.Value)), new { @id = "DCRProductCategory", @Name = "DCRProductCategory", @class = "form-control", @data_selected = Model.ProductCategory })
                            @Html.ValidationMessageFor(m => m.ProductCategory, ResourceNames.DCR)
                            @Html.ValidationMessage("DCRProductCategory", Html.ResourceValue("Error_ProductCategory", ResourceNames.DCR))
                            @Html.HiddenFor(m => m.ProductCategory)


                        </div>

                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">

                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        <span class="text-danger text-default-light">*</span>
                        @Html.LabelFor(m => m.Designchangeproposeddueto, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8 ">
                        <div class="form-control noborder">
                            @Html.DropDownListFor(m => m.Designchangeproposeddueto, new SelectList((Model.MasterData.FirstOrDefault(x => x.NameOfMaster.Equals(DCRDCNListNames.DESIGNCHANGEPROPOSEDMASTER)) as DesignchangeproposedMaster).Items.OrderBy(x => x.Title).ToList(), "Value", "Title"), "Select", new { @class = "form-control", @data_selected = Model.Designchangeproposeddueto })
                            @*@Html.DropDownListFor(m => m.Designchangeproposeddueto, new SelectList((desinChangeProposed).OrderBy(x => x.Title).ToList(), "Value", "Title"), "Select", new { @class = "form-control", @data_selected = Model.Designchangeproposeddueto })*@
                            @Html.ValidationMessageFor(m => m.Designchangeproposeddueto, ResourceNames.DCR)
                        </div>
                    </div>
                </div>

            </div>

        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">
                        <span class="text-danger text-default-light">*</span>
                        @Html.LabelFor(m => m.ProductName, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8 ">
                        @Html.TextBoxFor(m => m.ProductName, new { maxLength = 255, @class = "form-control", data_toggle = "tooltip", title = "Max 255 characters" })
                        @Html.ValidationMessageFor(m => m.ProductName, ResourceNames.DCR)
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div id="divproposedduetoOther" class="form-group">
                    <label class="col-md-4 control-label">
                        @Html.LabelFor(m => m.DesignChangeProposedOther, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8 ">
                        @Html.TextBoxFor(m => m.DesignChangeProposedOther, new { maxLength = 255, @class = "form-control", data_toggle = "tooltip", title = "Max 255 characters" })
                        @Html.ValidationMessageFor(m => m.DesignChangeProposedOther, ResourceNames.DCR)
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        <span class="text-danger text-default-light">*</span>
                        @Html.LabelFor(m => m.DescriptionOfDesignChangePropose, ResourceNames.DCR)

                    </label>
                    <div class="col-md-8">
                        @Html.TextAreaFor(m => m.DescriptionOfDesignChangePropose, new { maxLength = 1000, @class = "form-control", data_toggle = "tooltip", title = "Max 1000 characters" })
                        @Html.ValidationMessageFor(m => m.DescriptionOfDesignChangePropose, ResourceNames.DCR)

                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        <span class="text-danger text-default-light">*</span>
                        @Html.LabelFor(m => m.Expectedresultsifdesignchangeisc, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8 ">
                        @Html.TextAreaFor(m => m.Expectedresultsifdesignchangeisc, new { MaxLength = 1000, @class = "form-control", data_toggle = "tooltip", title = "Max 1000 characters" })
                        @Html.ValidationMessageFor(m => m.Expectedresultsifdesignchangeisc, ResourceNames.DCR)
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        @Html.LabelFor(m => m.DesignChangeRequiredByDate, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8">
                        <div class="input-group date datepicker">
                            @Html.TextBoxFor(m => m.DesignChangeRequiredByDate, "{0:dd/MM/yyyy}", new { @class = "form-control" })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>

                        @Html.ValidationMessageFor(m => m.DesignChangeRequiredByDate, ResourceNames.DCR)

                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">
                        @*<span class="text-danger text-default-light">*</span>*@
                        @Html.LabelFor(m => m.FNLDesignChangeAttachment, ResourceNames.DCR)

                    </label>
                    <div class="col-md-8 ">

                        <div id="AttachmentDesignChange" data-appname="@SiteURLs.DCRDCNSITEURL">
                        </div>
                        @Html.TextBoxFor(m => m.FNLDesignChangeAttachment, new { @class = "notvisible" })
                        @Html.ValidationMessageFor(m => m.FNLDesignChangeAttachment, ResourceNames.DCR)
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">
                        @*<span class="text-danger text-default-light">*</span>*@
                        @Html.LabelFor(m => m.FNLExpectedResultsAttachment, ResourceNames.DCR)

                    </label>
                    <div class="col-md-8 ">
                        <div id="AttachmentExpectedResult" data-appname="@SiteURLs.DCRDCNSITEURL">
                        </div>
                        @Html.TextBoxFor(m => m.FNLExpectedResultsAttachment, new { @class = "notvisible" })
                        @Html.ValidationMessageFor(m => m.FNLExpectedResultsAttachment, ResourceNames.DCR)

                    </div>
                </div>
            </div>
        </div>
        <div id="applicationstatusbody">
            @Html.Partial("_Approvers", Model.ApproversList)
        </div>


        if (!string.IsNullOrEmpty(Request.QueryString["IsRetrieve"]))
        {
            <div class="card" id="DCRINCHARGE">
                <div class="card-head">
                    @Html.ResourceValue("Section_Title_INCHARGESECTION", ResourceNames.DCR)

                    <div class="btn collapse-btn" data-toggle="collapse" data-target="#dcrPCRSec"><i class="fa fa-chevron-down"></i></div>
                </div>
                <div class="card-body" id="dcrPCRSec">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="col-md-4 control-label">
                                        <span class="text-danger text-default-light">*</span>
                                        @Html.LabelFor(m => m.DDHODDISPOSAL, ResourceNames.DCR)

                                    </label>
                                    <div class="col-sm-8">
                                        <div class="form-control noborder text-left">
                                            <div class="form-control noborder">
                                                @Html.DropDownListFor(m => m.DDHODDISPOSAL, new SelectList((statusList).OrderBy(x => x.Title).ToList(), "Value", "Title"), "Select", new { @class = "form-control ddhoddisposal", @data_selected = Model.DDHODDISPOSAL })
                                                @Html.ValidationMessageFor(m => m.DDHODDISPOSAL, ResourceNames.DCR)

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 notConsider">
                                <div class="form-group">
                                    <label class="col-md-4 control-label">
                                        <span class="text-danger text-default-light">*</span>
                                        @Html.LabelFor(m => m.IfNotConsidered, ResourceNames.DCR)

                                    </label>
                                    <div class="col-sm-8">
                                        <div class="form-control noborder text-left">
                                            @Html.TextAreaFor(m => m.IfNotConsidered, new { maxLength = 255, @class = "form-control", data_toggle = "tooltip", title = "Max 255 characters" })
                                            @Html.ValidationMessageFor(m => m.IfNotConsidered, ResourceNames.DCR)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 rework">
                                <div class="form-group ">
                                    <label class="col-md-4 control-label">
                                        <span class="text-danger text-default-light">*</span>
                                        @Html.LabelFor(m => m.ReworkComments, ResourceNames.DCR)

                                    </label>
                                    <div class="col-sm-8">
                                        <div class="form-control noborder text-left">
                                            @Html.TextAreaFor(m => m.ReworkComments, new { maxLength = 255, @class = "form-control", data_toggle = "tooltip", title = "Max 255 characters" })
                                            @Html.ValidationMessageFor(m => m.ReworkComments, ResourceNames.DCR)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 consider">
                                <div class="form-group">
                                    <label class="col-md-4 control-label">
                                        <span class="text-danger text-default-light">*</span>
                                        @Html.ResourceValue("Label_Comments", ResourceNames.DCR)

                                    </label>
                                    <div class="col-sm-8">
                                        <div class="form-control noborder text-left">
                                            @Html.TextAreaFor(m => m.CurrentApprover.Comments, new { maxLength = 255, @class = "form-control", @data_val = "true", @data_val_required = "Please Enter Comment", data_toggle = "tooltip", title = "Max 255 characters" })
                                            @Html.HiddenFor(x => x.CurrentApprover.Approver)
                                            @Html.HiddenFor(x => x.CurrentApprover.Role)
                                            @Html.HiddenFor(x => x.CurrentApprover.AssignDate)
                                            @Html.ValidationMessageFor(m => m.CurrentApprover.Comments, ResourceNames.DCR)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 consider">
                                <div class="form-group">
                                    <label class="col-md-4 control-label">
                                        <span class="text-danger text-default-light">*</span>
                                        @Html.LabelFor(m => m.MarketingApprovalRequired, ResourceNames.DCR)

                                    </label>
                                    <div class="col-sm-8">
                                        <div class="form-control noborder text-left">
                                            <div class="form-control noborder">
                                                <div class="form-control noborder">
                                                    @Html.RadioButtonFor(m => m.MarketingApprovalRequired, "True", new { @Id = "MarketingApprovalRequired1" })
                                                    <label for="MarketingApprovalRequired1">Yes</label>
                                                    @Html.RadioButtonFor(m => m.MarketingApprovalRequired, "False", new { @Id = "MarketingApprovalRequired2" })
                                                    <label for="MarketingApprovalRequired2">No</label>
                                                </div>
                                                @Html.ValidationMessageFor(m => m.MarketingApprovalRequired, ResourceNames.DCR)

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 consider">
                                <div class="form-group">
                                    <label class="col-md-4 control-label">
                                        <span class="text-danger text-default-light">*</span>
                                        @*@Html.LabelFor(m => m.DesignEngineerIncharge, ResourceNames.DCR)*@
                                        @Html.LabelFor(m => m.DesignEngineer, ResourceNames.DCR)

                                    </label>
                                    <div class="col-sm-8">
                                        <div class="form-control noborder text-left">
                                            @*@Html.DropDownListFor(m => m.DesignEngineerIncharge, new SelectList((desingenggList).OrderBy(x => x.Title).ToList(), "UserID", "UserName"), "Select", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.DesignEngineerIncharge, ResourceNames.DCR)*@

                                            @Html.DropDownListFor(m => m.DesignEngineer, new SelectList((desingenggList).OrderBy(x => x.Title).ToList(), "UserID", "UserName"), "Select", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.DesignEngineer, ResourceNames.DCR)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label class="col-md-4 control-label">
                                        Attachments:
                                    </label>
                                    <div class="col-md-8 ">
                                        <div id="AttachmentDCR" data-appname="@SiteURLs.DCRDCNSITEURL">
                                        </div>
                                        @Html.TextBoxFor(m => m.FNLDCRAttachment, new { @class = "notvisible" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group consider">
                                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                                        <span class="text-danger text-default-light">*</span>
                                        @Html.LabelFor(m => m.TargetDateOfImplementation, ResourceNames.DCR)
                                    </label>
                                    <div class="col-md-8">
                                        <div class="input-group date datepicker">
                                            @Html.TextBoxFor(m => m.TargetDateOfImplementation, "{0:dd/MM/yyyy}", new { @class = "form-control" })
                                            <span class="input-group-addon">
                                                <span class="fa fa-calendar"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.TargetDateOfImplementation, ResourceNames.DCR)
                                        @Html.Hidden("TargetDateOfImplementation", Model.TargetDateOfImplementation.HasValue ? Model.TargetDateOfImplementation.Value.ToShortDateString() : "")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>

        }
        else if (Model.IsActive)
        {
            @Html.HiddenFor(m => m.DDHODDISPOSAL)
            @Html.HiddenFor(m => m.TargetDateOfImplementation)
            @Html.HiddenFor(m => m.MarketingApprovalRequired)
            @Html.HiddenFor(m => m.FNLDCRAttachment)
            @Html.HiddenFor(m => m.ConsiderRework)
        }
    }

</div>
