@using BEL.DCRDCNWorkflow.Models.DCR
@using BEL.CommonDataContract
@model CCInchargeSection

@{
    List<MasterDataItem> ConsumerList = new List<MasterDataItem>();
    ConsumerList.Add(new MasterDataItem("Feasible", "Feasible"));
    ConsumerList.Add(new MasterDataItem("Not Feasible", "Not Feasible"));
}
<div class="form-horizontal">
    @using (Ajax.BeginForm("SaveCCHeadSection", "DCR", new AjaxOptions
    {
        HttpMethod = "POST",
        LoadingElementId = "loading",
        OnFailure = "OnFailure",
        OnSuccess = "OnSuccess",
        OnBegin = "BeginClient"
    }, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(m => m.ListDetails[0].ItemId)
        @Html.HiddenFor(m => m.ListDetails[0].ListName)
        @Html.HiddenFor(m => m.SectionName)
        @Html.HiddenFor(m => m.ActionStatus)
        @Html.HiddenFor(m => m.SendBackTo)
        @Html.HiddenFor(m => m.Status)
        @Html.Partial("_ApproversList", Model.ApproversList)
        @Html.Partial("_CurrentApprover", Model.CurrentApprover ?? new ApplicationStatus())
        @Html.AntiForgeryToken()


        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">
                        <span class="text-danger text-default-light">*</span>
                        @Html.LabelFor(m => m.Feasibility, ResourceNames.DCR)

                    </label>
                    <div class="col-md-8 ">
                        @Html.DropDownListFor(m => m.Feasibility, new SelectList((ConsumerList).OrderBy(x => x.Title).ToList(), "Value", "Title"), "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Feasibility, ResourceNames.DCR)
                    </div>
                </div>
            </div>
            @if (Model.CurrentApprover != null && Model.CurrentApprover.ApprovalDate.HasValue)
            {
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="col-md-4 control-label">

                            @Html.LabelFor(m => Model.CurrentApprover.ApprovalDate, ResourceNames.Common)
                        </label>
                        <div class="col-md-8" style="padding-top:6px">
                            @(Model.CurrentApprover != null && Model.CurrentApprover.ApprovalDate.HasValue ? Model.CurrentApprover.ApprovalDate.Value.ToShortDateString() : "-")
                            @Html.Hidden("Approver", Model.CurrentApprover != null && Model.CurrentApprover.ApprovalDate.HasValue ? Model.CurrentApprover.ApprovalDate.Value.ToShortDateString() : string.Empty)
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="exampleInputEmail1" class="col-md-4 control-label">
                        @Html.LabelFor(m => m.CCIfNotFeasibleGiveReason, ResourceNames.DCR)
                    </label>
                    <div class="col-md-8 ">
                        @Html.TextBoxFor(m => m.CCIfNotFeasibleGiveReason, new { maxlength = 255, @class = "form-control", data_toggle = "tooltip", title = "Max 255 characters" })
                        @Html.ValidationMessageFor(m => m.CCIfNotFeasibleGiveReason, ResourceNames.DCR)
                    </div>
                </div>
            </div>


        </div>
    }
</div>
